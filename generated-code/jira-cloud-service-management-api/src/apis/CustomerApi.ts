/* tslint:disable */
/* eslint-disable */
/**
 * Service Management Public REST API
 * Public REST API for Jira Service Management
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-b3300bcdd36d8c214940b3035162ea6fa1d58aa8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CustomerCreateDTO,
  ErrorResponse,
  UserDTO,
} from '../models/index';

export interface CreateCustomerRequest {
    customerCreateDTO: CustomerCreateDTO;
    strictConflictStatusCode?: boolean;
}

/**
 * 
 */
export class CustomerApi extends runtime.BaseAPI {

    /**
     * This method adds a customer to the Jira Service Management instance by passing a JSON file including an email address and display name. The display name does not need to be unique. The record\'s identifiers, `name` and `key`, are automatically generated from the request details.  **[Permissions](#permissions) required**: Jira Administrator Global permission
     * Create customer
     */
    async createCustomerRaw(requestParameters: CreateCustomerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserDTO>> {
        if (requestParameters['customerCreateDTO'] == null) {
            throw new runtime.RequiredError(
                'customerCreateDTO',
                'Required parameter "customerCreateDTO" was null or undefined when calling createCustomer().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['strictConflictStatusCode'] != null) {
            queryParameters['strictConflictStatusCode'] = requestParameters['strictConflictStatusCode'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2", ["manage:servicedesk-customer"]);
        }

        const response = await this.request({
            path: `/rest/servicedeskapi/customer`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['customerCreateDTO'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * This method adds a customer to the Jira Service Management instance by passing a JSON file including an email address and display name. The display name does not need to be unique. The record\'s identifiers, `name` and `key`, are automatically generated from the request details.  **[Permissions](#permissions) required**: Jira Administrator Global permission
     * Create customer
     */
    async createCustomer(requestParameters: CreateCustomerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserDTO> {
        const response = await this.createCustomerRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
