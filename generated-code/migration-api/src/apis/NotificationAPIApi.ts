/* tslint:disable */
/* eslint-disable */
/**
 * App Migration
 * Endpoints available in Jira and Confluence cloud instances to support app migrations
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  WebhookEndpointsDto,
} from '../models/index';

export interface PutWebhookUsingPUTRequest {
    webhookEndpointsDto: WebhookEndpointsDto;
}

/**
 * 
 */
export class NotificationAPIApi extends runtime.BaseAPI {

    /**
     * Retrieves all the webhook endpoints for a cloud site
     * Get all webhooks
     */
    async getWebhookUsingGETRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookEndpointsDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/webhook`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Retrieves all the webhook endpoints for a cloud site
     * Get all webhooks
     */
    async getWebhookUsingGET(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookEndpointsDto> {
        const response = await this.getWebhookUsingGETRaw(initOverrides);
        return await response.value();
    }

    /**
     * Replaces existing URLs with a new set of URLs provided by your cloud app to receive notifications
     * Update webhook
     */
    async putWebhookUsingPUTRaw(requestParameters: PutWebhookUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebhookEndpointsDto>> {
        if (requestParameters['webhookEndpointsDto'] == null) {
            throw new runtime.RequiredError(
                'webhookEndpointsDto',
                'Required parameter "webhookEndpointsDto" was null or undefined when calling putWebhookUsingPUT().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/webhook`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['webhookEndpointsDto'],
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Replaces existing URLs with a new set of URLs provided by your cloud app to receive notifications
     * Update webhook
     */
    async putWebhookUsingPUT(requestParameters: PutWebhookUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebhookEndpointsDto | null | undefined > {
        const response = await this.putWebhookUsingPUTRaw(requestParameters, initOverrides);
        switch (response.raw.status) {
            case 200:
                return await response.value();
            case 201:
                return null;
            default:
                return await response.value();
        }
    }

}
